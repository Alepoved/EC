   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../gpio.c"
 1698              		.align	2
 1699              		.global	portB_conf
 1701              	portB_conf:
 1702              	.LFB0:
   1:../gpio.c     **** //Copiar código completo de la práctica 2
   2:../gpio.c     **** 
   3:../gpio.c     **** //Copiar código completo del primer apartado de la práctica
   4:../gpio.c     **** 
   5:../gpio.c     **** #include "44b.h"
   6:../gpio.c     **** #include "gpio.h"
   7:../gpio.c     **** 
   8:../gpio.c     **** /* Port B interface implementation */
   9:../gpio.c     **** 
  10:../gpio.c     **** int portB_conf(int pin, enum port_mode mode)
  11:../gpio.c     **** {
 1703              		.loc 1 11 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 0130A0E1 		mov	r3, r1
 1721 0018 19304BE5 		strb	r3, [fp, #-25]
  12:../gpio.c     **** 	int ret = 0;
 1722              		.loc 1 12 0
 1723 001c 0030A0E3 		mov	r3, #0
 1724 0020 10300BE5 		str	r3, [fp, #-16]
  13:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1725              		.loc 1 13 0
 1726 0024 18301BE5 		ldr	r3, [fp, #-24]
 1727 0028 000053E3 		cmp	r3, #0
 1728 002c 020000BA 		blt	.L2
 1729              		.loc 1 13 0 is_stmt 0 discriminator 1
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 0A0053E3 		cmp	r3, #10
 1732 0038 010000DA 		ble	.L3
 1733              	.L2:
  14:../gpio.c     **** 		return -1;
 1734              		.loc 1 14 0 is_stmt 1
 1735 003c 0030E0E3 		mvn	r3, #0
 1736 0040 1B0000EA 		b	.L4
 1737              	.L3:
  15:../gpio.c     **** 
  16:../gpio.c     **** 	if (mode == SIGOUT){
 1738              		.loc 1 16 0
 1739 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1740 0048 020053E3 		cmp	r3, #2
 1741 004c 0800001A 		bne	.L5
  17:../gpio.c     **** 		//COMPLETAR: Configurar el pin del puerto B
  18:../gpio.c     **** 		//para que salga la senal correspondiente del controlador de memoria
  19:../gpio.c     **** 		rPCONB |= (1 << pin);
 1742              		.loc 1 19 0
 1743 0050 6C309FE5 		ldr	r3, .L8
 1744 0054 68209FE5 		ldr	r2, .L8
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 0100A0E3 		mov	r0, #1
 1747 0060 18201BE5 		ldr	r2, [fp, #-24]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
 1751 0070 0E0000EA 		b	.L6
 1752              	.L5:
  20:../gpio.c     **** 
  21:../gpio.c     **** 	}
  22:../gpio.c     **** 	else if (mode == OUTPUT){
 1753              		.loc 1 22 0
 1754 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1755 0078 010053E3 		cmp	r3, #1
 1756 007c 0900001A 		bne	.L7
  23:../gpio.c     **** 		///COMPLETAR: Configurar el pin del puerto B
  24:../gpio.c     **** 		//para que sea de salida
  25:../gpio.c     **** 		rPCONB &= ~(1 << pin);
 1757              		.loc 1 25 0
 1758 0080 3C309FE5 		ldr	r3, .L8
 1759 0084 38209FE5 		ldr	r2, .L8
 1760 0088 001092E5 		ldr	r1, [r2, #0]
 1761 008c 0100A0E3 		mov	r0, #1
 1762 0090 18201BE5 		ldr	r2, [fp, #-24]
 1763 0094 1022A0E1 		mov	r2, r0, asl r2
 1764 0098 0220E0E1 		mvn	r2, r2
 1765 009c 022001E0 		and	r2, r1, r2
 1766 00a0 002083E5 		str	r2, [r3, #0]
 1767 00a4 010000EA 		b	.L6
 1768              	.L7:
  26:../gpio.c     **** 	}
  27:../gpio.c     **** 	else
  28:../gpio.c     **** 		ret = -1;
 1769              		.loc 1 28 0
 1770 00a8 0030E0E3 		mvn	r3, #0
 1771 00ac 10300BE5 		str	r3, [fp, #-16]
 1772              	.L6:
  29:../gpio.c     **** 
  30:../gpio.c     **** 	return ret;
 1773              		.loc 1 30 0
 1774 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1775              	.L4:
  31:../gpio.c     **** }
 1776              		.loc 1 31 0
 1777 00b4 0300A0E1 		mov	r0, r3
 1778 00b8 0CD04BE2 		sub	sp, fp, #12
 1779 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1780 00c0 1EFF2FE1 		bx	lr
 1781              	.L9:
 1782              		.align	2
 1783              	.L8:
 1784 00c4 0800D201 		.word	30539784
 1785              		.cfi_endproc
 1786              	.LFE0:
 1788              		.align	2
 1789              		.global	portB_write
 1791              	portB_write:
 1792              	.LFB1:
  32:../gpio.c     **** 
  33:../gpio.c     **** int portB_write(int pin, enum digital val)
  34:../gpio.c     **** {
 1793              		.loc 1 34 0
 1794              		.cfi_startproc
 1795              		@ Function supports interworking.
 1796              		@ args = 0, pretend = 0, frame = 8
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 00c8 0DC0A0E1 		mov	ip, sp
 1799              	.LCFI2:
 1800              		.cfi_def_cfa_register 12
 1801 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1802 00d0 04B04CE2 		sub	fp, ip, #4
 1803              		.cfi_offset 14, -8
 1804              		.cfi_offset 13, -12
 1805              		.cfi_offset 11, -16
 1806              	.LCFI3:
 1807              		.cfi_def_cfa 11, 4
 1808 00d4 08D04DE2 		sub	sp, sp, #8
 1809 00d8 10000BE5 		str	r0, [fp, #-16]
 1810 00dc 0130A0E1 		mov	r3, r1
 1811 00e0 11304BE5 		strb	r3, [fp, #-17]
  35:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1812              		.loc 1 35 0
 1813 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1814 00e8 000053E3 		cmp	r3, #0
 1815 00ec 020000BA 		blt	.L11
 1816              		.loc 1 35 0 is_stmt 0 discriminator 1
 1817 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1818 00f4 0A0053E3 		cmp	r3, #10
 1819 00f8 010000DA 		ble	.L12
 1820              	.L11:
  36:../gpio.c     **** 		return -1;
 1821              		.loc 1 36 0 is_stmt 1
 1822 00fc 0030E0E3 		mvn	r3, #0
 1823 0100 1A0000EA 		b	.L13
 1824              	.L12:
  37:../gpio.c     **** 
  38:../gpio.c     **** 	if (val < 0 || val > 1)
 1825              		.loc 1 38 0
 1826 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 0108 010053E3 		cmp	r3, #1
 1828 010c 0100009A 		bls	.L14
  39:../gpio.c     **** 		return -1;
 1829              		.loc 1 39 0
 1830 0110 0030E0E3 		mvn	r3, #0
 1831 0114 150000EA 		b	.L13
 1832              	.L14:
  40:../gpio.c     **** 
  41:../gpio.c     **** 	if (val){
 1833              		.loc 1 41 0
 1834 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1835 011c 000053E3 		cmp	r3, #0
 1836 0120 0800000A 		beq	.L15
  42:../gpio.c     **** 		//COMPLETAR: poner en el pin del puerto B
  43:../gpio.c     **** 		//el valor adecuado para que el led se apague
  44:../gpio.c     **** 		rPDATB |= (1 << pin);
 1837              		.loc 1 44 0
 1838 0124 54309FE5 		ldr	r3, .L17
 1839 0128 50209FE5 		ldr	r2, .L17
 1840 012c 001092E5 		ldr	r1, [r2, #0]
 1841 0130 0100A0E3 		mov	r0, #1
 1842 0134 10201BE5 		ldr	r2, [fp, #-16]
 1843 0138 1022A0E1 		mov	r2, r0, asl r2
 1844 013c 022081E1 		orr	r2, r1, r2
 1845 0140 002083E5 		str	r2, [r3, #0]
 1846 0144 080000EA 		b	.L16
 1847              	.L15:
  45:../gpio.c     **** 	}
  46:../gpio.c     **** 	else{
  47:../gpio.c     **** 		//COMPLETAR: poner en el pin del puerto B
  48:../gpio.c     **** 		//el valor adecuado para que el led se encienda
  49:../gpio.c     **** 		rPDATB &= ~(1 << pin);
 1848              		.loc 1 49 0
 1849 0148 30309FE5 		ldr	r3, .L17
 1850 014c 2C209FE5 		ldr	r2, .L17
 1851 0150 001092E5 		ldr	r1, [r2, #0]
 1852 0154 0100A0E3 		mov	r0, #1
 1853 0158 10201BE5 		ldr	r2, [fp, #-16]
 1854 015c 1022A0E1 		mov	r2, r0, asl r2
 1855 0160 0220E0E1 		mvn	r2, r2
 1856 0164 022001E0 		and	r2, r1, r2
 1857 0168 002083E5 		str	r2, [r3, #0]
 1858              	.L16:
  50:../gpio.c     **** 
  51:../gpio.c     **** 	}
  52:../gpio.c     **** 	return 0;
 1859              		.loc 1 52 0
 1860 016c 0030A0E3 		mov	r3, #0
 1861              	.L13:
  53:../gpio.c     **** }
 1862              		.loc 1 53 0
 1863 0170 0300A0E1 		mov	r0, r3
 1864 0174 0CD04BE2 		sub	sp, fp, #12
 1865 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1866 017c 1EFF2FE1 		bx	lr
 1867              	.L18:
 1868              		.align	2
 1869              	.L17:
 1870 0180 0C00D201 		.word	30539788
 1871              		.cfi_endproc
 1872              	.LFE1:
 1874              		.align	2
 1875              		.global	portG_conf
 1877              	portG_conf:
 1878              	.LFB2:
  54:../gpio.c     **** 
  55:../gpio.c     **** /* Port G interface implementation */
  56:../gpio.c     **** 
  57:../gpio.c     **** int portG_conf(int pin, enum port_mode mode)
  58:../gpio.c     **** {
 1879              		.loc 1 58 0
 1880              		.cfi_startproc
 1881              		@ Function supports interworking.
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0184 0DC0A0E1 		mov	ip, sp
 1885              	.LCFI4:
 1886              		.cfi_def_cfa_register 12
 1887 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1888 018c 04B04CE2 		sub	fp, ip, #4
 1889              		.cfi_offset 14, -8
 1890              		.cfi_offset 13, -12
 1891              		.cfi_offset 11, -16
 1892              	.LCFI5:
 1893              		.cfi_def_cfa 11, 4
 1894 0190 10D04DE2 		sub	sp, sp, #16
 1895 0194 18000BE5 		str	r0, [fp, #-24]
 1896 0198 0130A0E1 		mov	r3, r1
 1897 019c 19304BE5 		strb	r3, [fp, #-25]
  59:../gpio.c     **** 	//La variable pos indica el primer bit del registro de control del puerto G que corresponde al pin
  60:../gpio.c     **** 	int pos  = pin*2;
 1898              		.loc 1 60 0
 1899 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1900 01a4 8330A0E1 		mov	r3, r3, asl #1
 1901 01a8 10300BE5 		str	r3, [fp, #-16]
  61:../gpio.c     **** 
  62:../gpio.c     **** 	if (pin < 0 || pin > 7)
 1902              		.loc 1 62 0
 1903 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1904 01b0 000053E3 		cmp	r3, #0
 1905 01b4 020000BA 		blt	.L20
 1906              		.loc 1 62 0 is_stmt 0 discriminator 1
 1907 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1908 01bc 070053E3 		cmp	r3, #7
 1909 01c0 010000DA 		ble	.L21
 1910              	.L20:
  63:../gpio.c     **** 		return -1;
 1911              		.loc 1 63 0 is_stmt 1
 1912 01c4 0030E0E3 		mvn	r3, #0
 1913 01c8 410000EA 		b	.L22
 1914              	.L21:
  64:../gpio.c     **** 
  65:../gpio.c     **** 	switch (mode) {
 1915              		.loc 1 65 0
 1916 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1917 01d0 030053E3 		cmp	r3, #3
 1918 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1919 01d8 3A0000EA 		b	.L23
 1920              	.L28:
 1921 01dc EC010000 		.word	.L24
 1922 01e0 14020000 		.word	.L25
 1923 01e4 5C020000 		.word	.L26
 1924 01e8 A4020000 		.word	.L27
 1925              	.L24:
  66:../gpio.c     **** 		case INPUT:
  67:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
  68:../gpio.c     **** 			//para que sea de entrada
  69:../gpio.c     **** 			rPCONG &= ~(3 << pos);
 1926              		.loc 1 69 0
 1927 01ec F0309FE5 		ldr	r3, .L30
 1928 01f0 EC209FE5 		ldr	r2, .L30
 1929 01f4 001092E5 		ldr	r1, [r2, #0]
 1930 01f8 0300A0E3 		mov	r0, #3
 1931 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1932 0200 1022A0E1 		mov	r2, r0, asl r2
 1933 0204 0220E0E1 		mvn	r2, r2
 1934 0208 022001E0 		and	r2, r1, r2
 1935 020c 002083E5 		str	r2, [r3, #0]
  70:../gpio.c     **** 
  71:../gpio.c     **** 			break;
 1936              		.loc 1 71 0
 1937 0210 2E0000EA 		b	.L29
 1938              	.L25:
  72:../gpio.c     **** 		case OUTPUT:
  73:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
  74:../gpio.c     **** 			//para que sea de salida
  75:../gpio.c     **** 			rPCONG &= ~(2 << pos);
 1939              		.loc 1 75 0
 1940 0214 C8309FE5 		ldr	r3, .L30
 1941 0218 C4209FE5 		ldr	r2, .L30
 1942 021c 001092E5 		ldr	r1, [r2, #0]
 1943 0220 0200A0E3 		mov	r0, #2
 1944 0224 10201BE5 		ldr	r2, [fp, #-16]
 1945 0228 1022A0E1 		mov	r2, r0, asl r2
 1946 022c 0220E0E1 		mvn	r2, r2
 1947 0230 022001E0 		and	r2, r1, r2
 1948 0234 002083E5 		str	r2, [r3, #0]
  76:../gpio.c     **** 			rPCONG |= (1 << pos);
 1949              		.loc 1 76 0
 1950 0238 A4309FE5 		ldr	r3, .L30
 1951 023c A0209FE5 		ldr	r2, .L30
 1952 0240 001092E5 		ldr	r1, [r2, #0]
 1953 0244 0100A0E3 		mov	r0, #1
 1954 0248 10201BE5 		ldr	r2, [fp, #-16]
 1955 024c 1022A0E1 		mov	r2, r0, asl r2
 1956 0250 022081E1 		orr	r2, r1, r2
 1957 0254 002083E5 		str	r2, [r3, #0]
  77:../gpio.c     **** 			break;
 1958              		.loc 1 77 0
 1959 0258 1C0000EA 		b	.L29
 1960              	.L26:
  78:../gpio.c     **** 		case SIGOUT:
  79:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
  80:../gpio.c     **** 			//para que salga la señal interna correspondiente
  81:../gpio.c     **** 			rPCONG &= ~(1 << pos);
 1961              		.loc 1 81 0
 1962 025c 80309FE5 		ldr	r3, .L30
 1963 0260 7C209FE5 		ldr	r2, .L30
 1964 0264 001092E5 		ldr	r1, [r2, #0]
 1965 0268 0100A0E3 		mov	r0, #1
 1966 026c 10201BE5 		ldr	r2, [fp, #-16]
 1967 0270 1022A0E1 		mov	r2, r0, asl r2
 1968 0274 0220E0E1 		mvn	r2, r2
 1969 0278 022001E0 		and	r2, r1, r2
 1970 027c 002083E5 		str	r2, [r3, #0]
  82:../gpio.c     **** 			rPCONG |= (2 << pos);
 1971              		.loc 1 82 0
 1972 0280 5C309FE5 		ldr	r3, .L30
 1973 0284 58209FE5 		ldr	r2, .L30
 1974 0288 001092E5 		ldr	r1, [r2, #0]
 1975 028c 0200A0E3 		mov	r0, #2
 1976 0290 10201BE5 		ldr	r2, [fp, #-16]
 1977 0294 1022A0E1 		mov	r2, r0, asl r2
 1978 0298 022081E1 		orr	r2, r1, r2
 1979 029c 002083E5 		str	r2, [r3, #0]
  83:../gpio.c     **** 
  84:../gpio.c     **** 			break;
 1980              		.loc 1 84 0
 1981 02a0 0A0000EA 		b	.L29
 1982              	.L27:
  85:../gpio.c     **** 		case EINT:
  86:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
  87:../gpio.c     **** 			//para habilitar la generación de interrupciones externas
  88:../gpio.c     **** 			rPCONG |= (3 << pos);
 1983              		.loc 1 88 0
 1984 02a4 38309FE5 		ldr	r3, .L30
 1985 02a8 34209FE5 		ldr	r2, .L30
 1986 02ac 001092E5 		ldr	r1, [r2, #0]
 1987 02b0 0300A0E3 		mov	r0, #3
 1988 02b4 10201BE5 		ldr	r2, [fp, #-16]
 1989 02b8 1022A0E1 		mov	r2, r0, asl r2
 1990 02bc 022081E1 		orr	r2, r1, r2
 1991 02c0 002083E5 		str	r2, [r3, #0]
  89:../gpio.c     **** 
  90:../gpio.c     **** 			break;
 1992              		.loc 1 90 0
 1993 02c4 010000EA 		b	.L29
 1994              	.L23:
  91:../gpio.c     **** 		default:
  92:../gpio.c     **** 			return -1;
 1995              		.loc 1 92 0
 1996 02c8 0030E0E3 		mvn	r3, #0
 1997 02cc 000000EA 		b	.L22
 1998              	.L29:
  93:../gpio.c     **** 	}
  94:../gpio.c     **** 
  95:../gpio.c     **** 	return 0;
 1999              		.loc 1 95 0
 2000 02d0 0030A0E3 		mov	r3, #0
 2001              	.L22:
  96:../gpio.c     **** }
 2002              		.loc 1 96 0
 2003 02d4 0300A0E1 		mov	r0, r3
 2004 02d8 0CD04BE2 		sub	sp, fp, #12
 2005 02dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2006 02e0 1EFF2FE1 		bx	lr
 2007              	.L31:
 2008              		.align	2
 2009              	.L30:
 2010 02e4 4000D201 		.word	30539840
 2011              		.cfi_endproc
 2012              	.LFE2:
 2014              		.align	2
 2015              		.global	portG_eint_trig
 2017              	portG_eint_trig:
 2018              	.LFB3:
  97:../gpio.c     **** 
  98:../gpio.c     **** int portG_eint_trig(int pin, enum trigger trig)
  99:../gpio.c     **** {
 2019              		.loc 1 99 0
 2020              		.cfi_startproc
 2021              		@ Function supports interworking.
 2022              		@ args = 0, pretend = 0, frame = 16
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024 02e8 0DC0A0E1 		mov	ip, sp
 2025              	.LCFI6:
 2026              		.cfi_def_cfa_register 12
 2027 02ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2028 02f0 04B04CE2 		sub	fp, ip, #4
 2029              		.cfi_offset 14, -8
 2030              		.cfi_offset 13, -12
 2031              		.cfi_offset 11, -16
 2032              	.LCFI7:
 2033              		.cfi_def_cfa 11, 4
 2034 02f4 10D04DE2 		sub	sp, sp, #16
 2035 02f8 18000BE5 		str	r0, [fp, #-24]
 2036 02fc 0130A0E1 		mov	r3, r1
 2037 0300 19304BE5 		strb	r3, [fp, #-25]
 100:../gpio.c     **** 	//La variable pos indica el primer bit del registro EXTINT del puerto G que corresponde al pin
 101:../gpio.c     **** 	int pos = pin*4;
 2038              		.loc 1 101 0
 2039 0304 18301BE5 		ldr	r3, [fp, #-24]
 2040 0308 0331A0E1 		mov	r3, r3, asl #2
 2041 030c 10300BE5 		str	r3, [fp, #-16]
 102:../gpio.c     **** 
 103:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2042              		.loc 1 103 0
 2043 0310 18301BE5 		ldr	r3, [fp, #-24]
 2044 0314 000053E3 		cmp	r3, #0
 2045 0318 020000BA 		blt	.L33
 2046              		.loc 1 103 0 is_stmt 0 discriminator 1
 2047 031c 18301BE5 		ldr	r3, [fp, #-24]
 2048 0320 070053E3 		cmp	r3, #7
 2049 0324 010000DA 		ble	.L34
 2050              	.L33:
 104:../gpio.c     **** 		return -1;
 2051              		.loc 1 104 0 is_stmt 1
 2052 0328 0030E0E3 		mvn	r3, #0
 2053 032c 540000EA 		b	.L35
 2054              	.L34:
 105:../gpio.c     **** 
 106:../gpio.c     **** 	switch (trig) {
 2055              		.loc 1 106 0
 2056 0330 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2057 0334 040053E3 		cmp	r3, #4
 2058 0338 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2059 033c 4D0000EA 		b	.L36
 2060              	.L42:
 2061 0340 54030000 		.word	.L37
 2062 0344 7C030000 		.word	.L38
 2063 0348 C4030000 		.word	.L39
 2064 034c 0C040000 		.word	.L40
 2065 0350 54040000 		.word	.L41
 2066              	.L37:
 107:../gpio.c     **** 		case LLOW:
 108:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que genere interrupciones externas por nivel b
 109:../gpio.c     **** 			rEXTINT &= ~(7 << pos);
 2067              		.loc 1 109 0
 2068 0354 38319FE5 		ldr	r3, .L44
 2069 0358 34219FE5 		ldr	r2, .L44
 2070 035c 001092E5 		ldr	r1, [r2, #0]
 2071 0360 0700A0E3 		mov	r0, #7
 2072 0364 10201BE5 		ldr	r2, [fp, #-16]
 2073 0368 1022A0E1 		mov	r2, r0, asl r2
 2074 036c 0220E0E1 		mvn	r2, r2
 2075 0370 022001E0 		and	r2, r1, r2
 2076 0374 002083E5 		str	r2, [r3, #0]
 110:../gpio.c     **** 			break;
 2077              		.loc 1 110 0
 2078 0378 400000EA 		b	.L43
 2079              	.L38:
 111:../gpio.c     **** 		case LHIGH:
 112:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que genere interrupciones externas por nivel a
 113:../gpio.c     **** 			rEXTINT &= ~(7 << pos);
 2080              		.loc 1 113 0
 2081 037c 10319FE5 		ldr	r3, .L44
 2082 0380 0C219FE5 		ldr	r2, .L44
 2083 0384 001092E5 		ldr	r1, [r2, #0]
 2084 0388 0700A0E3 		mov	r0, #7
 2085 038c 10201BE5 		ldr	r2, [fp, #-16]
 2086 0390 1022A0E1 		mov	r2, r0, asl r2
 2087 0394 0220E0E1 		mvn	r2, r2
 2088 0398 022001E0 		and	r2, r1, r2
 2089 039c 002083E5 		str	r2, [r3, #0]
 114:../gpio.c     **** 			rEXTINT |= (1 << pos);
 2090              		.loc 1 114 0
 2091 03a0 EC309FE5 		ldr	r3, .L44
 2092 03a4 E8209FE5 		ldr	r2, .L44
 2093 03a8 001092E5 		ldr	r1, [r2, #0]
 2094 03ac 0100A0E3 		mov	r0, #1
 2095 03b0 10201BE5 		ldr	r2, [fp, #-16]
 2096 03b4 1022A0E1 		mov	r2, r0, asl r2
 2097 03b8 022081E1 		orr	r2, r1, r2
 2098 03bc 002083E5 		str	r2, [r3, #0]
 115:../gpio.c     **** 
 116:../gpio.c     **** 			break;
 2099              		.loc 1 116 0
 2100 03c0 2E0000EA 		b	.L43
 2101              	.L39:
 117:../gpio.c     **** 		case FALLING:
 118:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que el pin genere interrupciones externas por 
 119:../gpio.c     **** 			rEXTINT &= ~(7 << pos);
 2102              		.loc 1 119 0
 2103 03c4 C8309FE5 		ldr	r3, .L44
 2104 03c8 C4209FE5 		ldr	r2, .L44
 2105 03cc 001092E5 		ldr	r1, [r2, #0]
 2106 03d0 0700A0E3 		mov	r0, #7
 2107 03d4 10201BE5 		ldr	r2, [fp, #-16]
 2108 03d8 1022A0E1 		mov	r2, r0, asl r2
 2109 03dc 0220E0E1 		mvn	r2, r2
 2110 03e0 022001E0 		and	r2, r1, r2
 2111 03e4 002083E5 		str	r2, [r3, #0]
 120:../gpio.c     **** 			rEXTINT |= (2 << pos);
 2112              		.loc 1 120 0
 2113 03e8 A4309FE5 		ldr	r3, .L44
 2114 03ec A0209FE5 		ldr	r2, .L44
 2115 03f0 001092E5 		ldr	r1, [r2, #0]
 2116 03f4 0200A0E3 		mov	r0, #2
 2117 03f8 10201BE5 		ldr	r2, [fp, #-16]
 2118 03fc 1022A0E1 		mov	r2, r0, asl r2
 2119 0400 022081E1 		orr	r2, r1, r2
 2120 0404 002083E5 		str	r2, [r3, #0]
 121:../gpio.c     **** 
 122:../gpio.c     **** 			break;
 2121              		.loc 1 122 0
 2122 0408 1C0000EA 		b	.L43
 2123              	.L40:
 123:../gpio.c     **** 		case RISING:
 124:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que el pin genere interrupciones externas por 
 125:../gpio.c     **** 			rEXTINT &= ~(7 << pos);
 2124              		.loc 1 125 0
 2125 040c 80309FE5 		ldr	r3, .L44
 2126 0410 7C209FE5 		ldr	r2, .L44
 2127 0414 001092E5 		ldr	r1, [r2, #0]
 2128 0418 0700A0E3 		mov	r0, #7
 2129 041c 10201BE5 		ldr	r2, [fp, #-16]
 2130 0420 1022A0E1 		mov	r2, r0, asl r2
 2131 0424 0220E0E1 		mvn	r2, r2
 2132 0428 022001E0 		and	r2, r1, r2
 2133 042c 002083E5 		str	r2, [r3, #0]
 126:../gpio.c     **** 			rEXTINT |= (4 << pos);
 2134              		.loc 1 126 0
 2135 0430 5C309FE5 		ldr	r3, .L44
 2136 0434 58209FE5 		ldr	r2, .L44
 2137 0438 001092E5 		ldr	r1, [r2, #0]
 2138 043c 0400A0E3 		mov	r0, #4
 2139 0440 10201BE5 		ldr	r2, [fp, #-16]
 2140 0444 1022A0E1 		mov	r2, r0, asl r2
 2141 0448 022081E1 		orr	r2, r1, r2
 2142 044c 002083E5 		str	r2, [r3, #0]
 127:../gpio.c     **** 
 128:../gpio.c     **** 			break;
 2143              		.loc 1 128 0
 2144 0450 0A0000EA 		b	.L43
 2145              	.L41:
 129:../gpio.c     **** 		case EDGE:
 130:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que el pin genere interrupciones externas por 
 131:../gpio.c     **** 			rEXTINT |= (6 << pos);
 2146              		.loc 1 131 0
 2147 0454 38309FE5 		ldr	r3, .L44
 2148 0458 34209FE5 		ldr	r2, .L44
 2149 045c 001092E5 		ldr	r1, [r2, #0]
 2150 0460 0600A0E3 		mov	r0, #6
 2151 0464 10201BE5 		ldr	r2, [fp, #-16]
 2152 0468 1022A0E1 		mov	r2, r0, asl r2
 2153 046c 022081E1 		orr	r2, r1, r2
 2154 0470 002083E5 		str	r2, [r3, #0]
 132:../gpio.c     **** 
 133:../gpio.c     **** 			break;
 2155              		.loc 1 133 0
 2156 0474 010000EA 		b	.L43
 2157              	.L36:
 134:../gpio.c     **** 		default:
 135:../gpio.c     **** 			return -1;
 2158              		.loc 1 135 0
 2159 0478 0030E0E3 		mvn	r3, #0
 2160 047c 000000EA 		b	.L35
 2161              	.L43:
 136:../gpio.c     **** 	}
 137:../gpio.c     **** 	return 0;
 2162              		.loc 1 137 0
 2163 0480 0030A0E3 		mov	r3, #0
 2164              	.L35:
 138:../gpio.c     **** }
 2165              		.loc 1 138 0
 2166 0484 0300A0E1 		mov	r0, r3
 2167 0488 0CD04BE2 		sub	sp, fp, #12
 2168 048c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2169 0490 1EFF2FE1 		bx	lr
 2170              	.L45:
 2171              		.align	2
 2172              	.L44:
 2173 0494 5000D201 		.word	30539856
 2174              		.cfi_endproc
 2175              	.LFE3:
 2177              		.align	2
 2178              		.global	portG_read
 2180              	portG_read:
 2181              	.LFB4:
 139:../gpio.c     **** 
 140:../gpio.c     **** 
 141:../gpio.c     **** int portG_read(int pin, enum digital **val)
 142:../gpio.c     **** {
 2182              		.loc 1 142 0
 2183              		.cfi_startproc
 2184              		@ Function supports interworking.
 2185              		@ args = 0, pretend = 0, frame = 16
 2186              		@ frame_needed = 1, uses_anonymous_args = 0
 2187 0498 0DC0A0E1 		mov	ip, sp
 2188              	.LCFI8:
 2189              		.cfi_def_cfa_register 12
 2190 049c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2191 04a0 04B04CE2 		sub	fp, ip, #4
 2192              		.cfi_offset 14, -8
 2193              		.cfi_offset 13, -12
 2194              		.cfi_offset 11, -16
 2195              	.LCFI9:
 2196              		.cfi_def_cfa 11, 4
 2197 04a4 10D04DE2 		sub	sp, sp, #16
 2198 04a8 18000BE5 		str	r0, [fp, #-24]
 2199 04ac 1C100BE5 		str	r1, [fp, #-28]
 143:../gpio.c     **** 	int pos = pin*2;
 2200              		.loc 1 143 0
 2201 04b0 18301BE5 		ldr	r3, [fp, #-24]
 2202 04b4 8330A0E1 		mov	r3, r3, asl #1
 2203 04b8 10300BE5 		str	r3, [fp, #-16]
 144:../gpio.c     **** 
 145:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2204              		.loc 1 145 0
 2205 04bc 18301BE5 		ldr	r3, [fp, #-24]
 2206 04c0 000053E3 		cmp	r3, #0
 2207 04c4 020000BA 		blt	.L47
 2208              		.loc 1 145 0 is_stmt 0 discriminator 1
 2209 04c8 18301BE5 		ldr	r3, [fp, #-24]
 2210 04cc 070053E3 		cmp	r3, #7
 2211 04d0 010000DA 		ble	.L48
 2212              	.L47:
 146:../gpio.c     **** 		return -1;
 2213              		.loc 1 146 0 is_stmt 1
 2214 04d4 0030E0E3 		mvn	r3, #0
 2215 04d8 190000EA 		b	.L49
 2216              	.L48:
 147:../gpio.c     **** 
 148:../gpio.c     **** 	if (rPCONG & (0x3 << pos))
 2217              		.loc 1 148 0
 2218 04dc 70309FE5 		ldr	r3, .L53
 2219 04e0 002093E5 		ldr	r2, [r3, #0]
 2220 04e4 0310A0E3 		mov	r1, #3
 2221 04e8 10301BE5 		ldr	r3, [fp, #-16]
 2222 04ec 1133A0E1 		mov	r3, r1, asl r3
 2223 04f0 033002E0 		and	r3, r2, r3
 2224 04f4 000053E3 		cmp	r3, #0
 2225 04f8 0100000A 		beq	.L50
 149:../gpio.c     **** 		return -1;
 2226              		.loc 1 149 0
 2227 04fc 0030E0E3 		mvn	r3, #0
 2228 0500 0F0000EA 		b	.L49
 2229              	.L50:
 150:../gpio.c     **** 	// COMPLETAR la condicion del if: comprobar si el pin del registro de datos del puerto G es un 1)
 151:../gpio.c     **** 	if (rPDATG & (1 << pin))
 2230              		.loc 1 151 0
 2231 0504 4C309FE5 		ldr	r3, .L53+4
 2232 0508 002093E5 		ldr	r2, [r3, #0]
 2233 050c 0110A0E3 		mov	r1, #1
 2234 0510 18301BE5 		ldr	r3, [fp, #-24]
 2235 0514 1133A0E1 		mov	r3, r1, asl r3
 2236 0518 033002E0 		and	r3, r2, r3
 2237 051c 000053E3 		cmp	r3, #0
 2238 0520 0300000A 		beq	.L51
 152:../gpio.c     **** 		*val=HIGH;
 2239              		.loc 1 152 0
 2240 0524 1C301BE5 		ldr	r3, [fp, #-28]
 2241 0528 0120A0E3 		mov	r2, #1
 2242 052c 002083E5 		str	r2, [r3, #0]
 2243 0530 020000EA 		b	.L52
 2244              	.L51:
 153:../gpio.c     **** 	else
 154:../gpio.c     **** 		*val=LOW;
 2245              		.loc 1 154 0
 2246 0534 1C301BE5 		ldr	r3, [fp, #-28]
 2247 0538 0020A0E3 		mov	r2, #0
 2248 053c 002083E5 		str	r2, [r3, #0]
 2249              	.L52:
 155:../gpio.c     **** 
 156:../gpio.c     **** 	return 0;
 2250              		.loc 1 156 0
 2251 0540 0030A0E3 		mov	r3, #0
 2252              	.L49:
 157:../gpio.c     **** }
 2253              		.loc 1 157 0
 2254 0544 0300A0E1 		mov	r0, r3
 2255 0548 0CD04BE2 		sub	sp, fp, #12
 2256 054c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2257 0550 1EFF2FE1 		bx	lr
 2258              	.L54:
 2259              		.align	2
 2260              	.L53:
 2261 0554 4000D201 		.word	30539840
 2262 0558 4400D201 		.word	30539844
 2263              		.cfi_endproc
 2264              	.LFE4:
 2266              		.align	2
 2267              		.global	portG_conf_pup
 2269              	portG_conf_pup:
 2270              	.LFB5:
 158:../gpio.c     **** 
 159:../gpio.c     **** int portG_conf_pup(int pin, enum enable st)
 160:../gpio.c     **** {
 2271              		.loc 1 160 0
 2272              		.cfi_startproc
 2273              		@ Function supports interworking.
 2274              		@ args = 0, pretend = 0, frame = 8
 2275              		@ frame_needed = 1, uses_anonymous_args = 0
 2276 055c 0DC0A0E1 		mov	ip, sp
 2277              	.LCFI10:
 2278              		.cfi_def_cfa_register 12
 2279 0560 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2280 0564 04B04CE2 		sub	fp, ip, #4
 2281              		.cfi_offset 14, -8
 2282              		.cfi_offset 13, -12
 2283              		.cfi_offset 11, -16
 2284              	.LCFI11:
 2285              		.cfi_def_cfa 11, 4
 2286 0568 08D04DE2 		sub	sp, sp, #8
 2287 056c 10000BE5 		str	r0, [fp, #-16]
 2288 0570 0130A0E1 		mov	r3, r1
 2289 0574 11304BE5 		strb	r3, [fp, #-17]
 161:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2290              		.loc 1 161 0
 2291 0578 10301BE5 		ldr	r3, [fp, #-16]
 2292 057c 000053E3 		cmp	r3, #0
 2293 0580 020000BA 		blt	.L56
 2294              		.loc 1 161 0 is_stmt 0 discriminator 1
 2295 0584 10301BE5 		ldr	r3, [fp, #-16]
 2296 0588 070053E3 		cmp	r3, #7
 2297 058c 010000DA 		ble	.L57
 2298              	.L56:
 162:../gpio.c     **** 		return -1;
 2299              		.loc 1 162 0 is_stmt 1
 2300 0590 0030E0E3 		mvn	r3, #0
 2301 0594 1D0000EA 		b	.L58
 2302              	.L57:
 163:../gpio.c     **** 
 164:../gpio.c     **** 	if (st != ENABLE && st != DISABLE)
 2303              		.loc 1 164 0
 2304 0598 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2305 059c 010053E3 		cmp	r3, #1
 2306 05a0 0400000A 		beq	.L59
 2307              		.loc 1 164 0 is_stmt 0 discriminator 1
 2308 05a4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2309 05a8 000053E3 		cmp	r3, #0
 2310 05ac 0100000A 		beq	.L59
 165:../gpio.c     **** 		return -1;
 2311              		.loc 1 165 0 is_stmt 1
 2312 05b0 0030E0E3 		mvn	r3, #0
 2313 05b4 150000EA 		b	.L58
 2314              	.L59:
 166:../gpio.c     **** 
 167:../gpio.c     **** 	if (st == ENABLE){
 2315              		.loc 1 167 0
 2316 05b8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2317 05bc 010053E3 		cmp	r3, #1
 2318 05c0 0900001A 		bne	.L60
 168:../gpio.c     **** 		//COMPLETAR: activar la resistencia de pull-up del pin del puerto G
 169:../gpio.c     **** 		rPUPG &= ~(1 << pin);
 2319              		.loc 1 169 0
 2320 05c4 54309FE5 		ldr	r3, .L62
 2321 05c8 50209FE5 		ldr	r2, .L62
 2322 05cc 001092E5 		ldr	r1, [r2, #0]
 2323 05d0 0100A0E3 		mov	r0, #1
 2324 05d4 10201BE5 		ldr	r2, [fp, #-16]
 2325 05d8 1022A0E1 		mov	r2, r0, asl r2
 2326 05dc 0220E0E1 		mvn	r2, r2
 2327 05e0 022001E0 		and	r2, r1, r2
 2328 05e4 002083E5 		str	r2, [r3, #0]
 2329 05e8 070000EA 		b	.L61
 2330              	.L60:
 170:../gpio.c     **** 	}
 171:../gpio.c     **** 	else{
 172:../gpio.c     **** 		//COMPLETAR: desactivar la resistencia de pull-up del pin del puerto G
 173:../gpio.c     **** 		rPUPG |= (1 << pin);
 2331              		.loc 1 173 0
 2332 05ec 2C309FE5 		ldr	r3, .L62
 2333 05f0 28209FE5 		ldr	r2, .L62
 2334 05f4 001092E5 		ldr	r1, [r2, #0]
 2335 05f8 0100A0E3 		mov	r0, #1
 2336 05fc 10201BE5 		ldr	r2, [fp, #-16]
 2337 0600 1022A0E1 		mov	r2, r0, asl r2
 2338 0604 022081E1 		orr	r2, r1, r2
 2339 0608 002083E5 		str	r2, [r3, #0]
 2340              	.L61:
 174:../gpio.c     **** 	}
 175:../gpio.c     **** 	return 0;
 2341              		.loc 1 175 0
 2342 060c 0030A0E3 		mov	r3, #0
 2343              	.L58:
 176:../gpio.c     **** }
 2344              		.loc 1 176 0
 2345 0610 0300A0E1 		mov	r0, r3
 2346 0614 0CD04BE2 		sub	sp, fp, #12
 2347 0618 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2348 061c 1EFF2FE1 		bx	lr
 2349              	.L63:
 2350              		.align	2
 2351              	.L62:
 2352 0620 4800D201 		.word	30539848
 2353              		.cfi_endproc
 2354              	.LFE5:
 2356              		.align	2
 2357              		.global	portG_write
 2359              	portG_write:
 2360              	.LFB6:
 177:../gpio.c     **** 
 178:../gpio.c     **** 
 179:../gpio.c     **** int portG_write(int pin, enum digital val)
 180:../gpio.c     **** {
 2361              		.loc 1 180 0
 2362              		.cfi_startproc
 2363              		@ Function supports interworking.
 2364              		@ args = 0, pretend = 0, frame = 16
 2365              		@ frame_needed = 1, uses_anonymous_args = 0
 2366 0624 0DC0A0E1 		mov	ip, sp
 2367              	.LCFI12:
 2368              		.cfi_def_cfa_register 12
 2369 0628 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2370 062c 04B04CE2 		sub	fp, ip, #4
 2371              		.cfi_offset 14, -8
 2372              		.cfi_offset 13, -12
 2373              		.cfi_offset 11, -16
 2374              	.LCFI13:
 2375              		.cfi_def_cfa 11, 4
 2376 0630 10D04DE2 		sub	sp, sp, #16
 2377 0634 18000BE5 		str	r0, [fp, #-24]
 2378 0638 0130A0E1 		mov	r3, r1
 2379 063c 19304BE5 		strb	r3, [fp, #-25]
 181:../gpio.c     **** 	int pos = pin*2;
 2380              		.loc 1 181 0
 2381 0640 18301BE5 		ldr	r3, [fp, #-24]
 2382 0644 8330A0E1 		mov	r3, r3, asl #1
 2383 0648 10300BE5 		str	r3, [fp, #-16]
 182:../gpio.c     **** 
 183:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2384              		.loc 1 183 0
 2385 064c 18301BE5 		ldr	r3, [fp, #-24]
 2386 0650 000053E3 		cmp	r3, #0
 2387 0654 020000BA 		blt	.L65
 2388              		.loc 1 183 0 is_stmt 0 discriminator 1
 2389 0658 18301BE5 		ldr	r3, [fp, #-24]
 2390 065c 070053E3 		cmp	r3, #7
 2391 0660 010000DA 		ble	.L66
 2392              	.L65:
 184:../gpio.c     **** 		return -1;
 2393              		.loc 1 184 0 is_stmt 1
 2394 0664 0030E0E3 		mvn	r3, #0
 2395 0668 270000EA 		b	.L67
 2396              	.L66:
 185:../gpio.c     **** 
 186:../gpio.c     **** 	if (val < 0 || val > 1)
 2397              		.loc 1 186 0
 2398 066c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2399 0670 010053E3 		cmp	r3, #1
 2400 0674 0100009A 		bls	.L68
 187:../gpio.c     **** 		return -1;
 2401              		.loc 1 187 0
 2402 0678 0030E0E3 		mvn	r3, #0
 2403 067c 220000EA 		b	.L67
 2404              	.L68:
 188:../gpio.c     **** 
 189:../gpio.c     **** 	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2405              		.loc 1 189 0
 2406 0680 94309FE5 		ldr	r3, .L72
 2407 0684 002093E5 		ldr	r2, [r3, #0]
 2408 0688 0310A0E3 		mov	r1, #3
 2409 068c 10301BE5 		ldr	r3, [fp, #-16]
 2410 0690 1133A0E1 		mov	r3, r1, asl r3
 2411 0694 032002E0 		and	r2, r2, r3
 2412 0698 0110A0E3 		mov	r1, #1
 2413 069c 10301BE5 		ldr	r3, [fp, #-16]
 2414 06a0 1133A0E1 		mov	r3, r1, asl r3
 2415 06a4 030052E1 		cmp	r2, r3
 2416 06a8 0100000A 		beq	.L69
 190:../gpio.c     **** 		return -1;
 2417              		.loc 1 190 0
 2418 06ac 0030E0E3 		mvn	r3, #0
 2419 06b0 150000EA 		b	.L67
 2420              	.L69:
 191:../gpio.c     **** 
 192:../gpio.c     **** 	if (val)
 2421              		.loc 1 192 0
 2422 06b4 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2423 06b8 000053E3 		cmp	r3, #0
 2424 06bc 0800000A 		beq	.L70
 193:../gpio.c     **** 		rPDATG|=(0x1<<pin);
 2425              		.loc 1 193 0
 2426 06c0 58309FE5 		ldr	r3, .L72+4
 2427 06c4 54209FE5 		ldr	r2, .L72+4
 2428 06c8 001092E5 		ldr	r1, [r2, #0]
 2429 06cc 0100A0E3 		mov	r0, #1
 2430 06d0 18201BE5 		ldr	r2, [fp, #-24]
 2431 06d4 1022A0E1 		mov	r2, r0, asl r2
 2432 06d8 022081E1 		orr	r2, r1, r2
 2433 06dc 002083E5 		str	r2, [r3, #0]
 2434 06e0 080000EA 		b	.L71
 2435              	.L70:
 194:../gpio.c     **** 	else
 195:../gpio.c     **** 		rPDATG &=~(0x1<<pin);
 2436              		.loc 1 195 0
 2437 06e4 34309FE5 		ldr	r3, .L72+4
 2438 06e8 30209FE5 		ldr	r2, .L72+4
 2439 06ec 001092E5 		ldr	r1, [r2, #0]
 2440 06f0 0100A0E3 		mov	r0, #1
 2441 06f4 18201BE5 		ldr	r2, [fp, #-24]
 2442 06f8 1022A0E1 		mov	r2, r0, asl r2
 2443 06fc 0220E0E1 		mvn	r2, r2
 2444 0700 022001E0 		and	r2, r1, r2
 2445 0704 002083E5 		str	r2, [r3, #0]
 2446              	.L71:
 196:../gpio.c     **** 
 197:../gpio.c     **** 	return 0;
 2447              		.loc 1 197 0
 2448 0708 0030A0E3 		mov	r3, #0
 2449              	.L67:
 198:../gpio.c     **** }
 2450              		.loc 1 198 0
 2451 070c 0300A0E1 		mov	r0, r3
 2452 0710 0CD04BE2 		sub	sp, fp, #12
 2453 0714 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2454 0718 1EFF2FE1 		bx	lr
 2455              	.L73:
 2456              		.align	2
 2457              	.L72:
 2458 071c 4000D201 		.word	30539840
 2459 0720 4400D201 		.word	30539844
 2460              		.cfi_endproc
 2461              	.LFE6:
 2463              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1698   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1701   .text:00000000 portB_conf
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1784   .text:000000c4 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1788   .text:000000c8 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1791   .text:000000c8 portB_write
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1870   .text:00000180 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1874   .text:00000184 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1877   .text:00000184 portG_conf
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1921   .text:000001dc $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:1927   .text:000001ec $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2010   .text:000002e4 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2014   .text:000002e8 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2017   .text:000002e8 portG_eint_trig
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2061   .text:00000340 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2068   .text:00000354 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2173   .text:00000494 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2177   .text:00000498 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2180   .text:00000498 portG_read
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2261   .text:00000554 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2266   .text:0000055c $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2269   .text:0000055c portG_conf_pup
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2352   .text:00000620 $d
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2356   .text:00000624 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2359   .text:00000624 portG_write
C:\Users\USUARI~1\AppData\Local\Temp\cc6zIUI2.s:2458   .text:0000071c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
